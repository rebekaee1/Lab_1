name: CI/CD

on:
  push:
    branches:
    - '*'
    - 'release/*'
    tags:
    - 'v*'
  pull_request:
    branches:
    - main
    - 'release/*'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm install
    - name: Run tests
      run: npm test
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_DB: testdb

  docs:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate documentation
      run: |
        mkdir -p docs
        echo "# API Documentation" > docs/api.md
        echo "Generated on: $(date)" >> docs/api.md
        echo "Version: $(node -p "require('./package.json').version")" >> docs/api.md

    - name: Commit documentation
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/
        git commit -m "Update documentation" || echo "No changes to commit"
        git push || echo "No changes to push"
